package org.linlinjava.litemall.db.dao;

import org.apache.ibatis.annotations.Param;
import org.linlinjava.litemall.db.domain.UserExtend;
import org.linlinjava.litemall.db.domain.UserExtendExample;

import java.math.BigInteger;
import java.util.List;

public interface UserExtendMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    long countByExample(UserExtendExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    int deleteByExample(UserExtendExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    int insert(UserExtend record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    int insertSelective(UserExtend record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    UserExtend selectOneByExample(UserExtendExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    UserExtend selectOneByExampleSelective(@Param("example") UserExtendExample example, @Param("selective") UserExtend.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    List<UserExtend> selectByExampleSelective(@Param("example") UserExtendExample example, @Param("selective") UserExtend.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    List<UserExtend> selectByExample(UserExtendExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    UserExtend selectByPrimaryKeySelective(@Param("id") Long id, @Param("selective") UserExtend.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    UserExtend selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") UserExtend record, @Param("example") UserExtendExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") UserExtend record, @Param("example") UserExtendExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(UserExtend record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(UserExtend record);

    void addMoney(@Param("recommondUserId") Long recommondUserId, @Param("resultMoney") long resultMoney);

    UserExtend selectByUserId(@Param("userId") Integer userId);

    void updateUserPrice(@Param("userId") Integer userId, @Param("actualPrice") BigInteger actualPrice);
}