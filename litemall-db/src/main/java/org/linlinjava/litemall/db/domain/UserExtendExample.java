package org.linlinjava.litemall.db.domain;

import java.util.ArrayList;
import java.util.List;

public class UserExtendExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public UserExtendExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public UserExtendExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public UserExtendExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        UserExtendExample example = new UserExtendExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public UserExtendExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public UserExtendExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRecommondUserIdIsNull() {
            addCriterion("recommond_user_id is null");
            return (Criteria) this;
        }

        public Criteria andRecommondUserIdIsNotNull() {
            addCriterion("recommond_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andRecommondUserIdEqualTo(Long value) {
            addCriterion("recommond_user_id =", value, "recommondUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRecommondUserIdEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("recommond_user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecommondUserIdNotEqualTo(Long value) {
            addCriterion("recommond_user_id <>", value, "recommondUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRecommondUserIdNotEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("recommond_user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecommondUserIdGreaterThan(Long value) {
            addCriterion("recommond_user_id >", value, "recommondUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRecommondUserIdGreaterThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("recommond_user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecommondUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("recommond_user_id >=", value, "recommondUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRecommondUserIdGreaterThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("recommond_user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecommondUserIdLessThan(Long value) {
            addCriterion("recommond_user_id <", value, "recommondUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRecommondUserIdLessThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("recommond_user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecommondUserIdLessThanOrEqualTo(Long value) {
            addCriterion("recommond_user_id <=", value, "recommondUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRecommondUserIdLessThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("recommond_user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecommondUserIdIn(List<Long> values) {
            addCriterion("recommond_user_id in", values, "recommondUserId");
            return (Criteria) this;
        }

        public Criteria andRecommondUserIdNotIn(List<Long> values) {
            addCriterion("recommond_user_id not in", values, "recommondUserId");
            return (Criteria) this;
        }

        public Criteria andRecommondUserIdBetween(Long value1, Long value2) {
            addCriterion("recommond_user_id between", value1, value2, "recommondUserId");
            return (Criteria) this;
        }

        public Criteria andRecommondUserIdNotBetween(Long value1, Long value2) {
            addCriterion("recommond_user_id not between", value1, value2, "recommondUserId");
            return (Criteria) this;
        }

        public Criteria andRecommondUserNameIsNull() {
            addCriterion("recommond_user_name is null");
            return (Criteria) this;
        }

        public Criteria andRecommondUserNameIsNotNull() {
            addCriterion("recommond_user_name is not null");
            return (Criteria) this;
        }

        public Criteria andRecommondUserNameEqualTo(String value) {
            addCriterion("recommond_user_name =", value, "recommondUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRecommondUserNameEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("recommond_user_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecommondUserNameNotEqualTo(String value) {
            addCriterion("recommond_user_name <>", value, "recommondUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRecommondUserNameNotEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("recommond_user_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecommondUserNameGreaterThan(String value) {
            addCriterion("recommond_user_name >", value, "recommondUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRecommondUserNameGreaterThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("recommond_user_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecommondUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("recommond_user_name >=", value, "recommondUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRecommondUserNameGreaterThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("recommond_user_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecommondUserNameLessThan(String value) {
            addCriterion("recommond_user_name <", value, "recommondUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRecommondUserNameLessThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("recommond_user_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecommondUserNameLessThanOrEqualTo(String value) {
            addCriterion("recommond_user_name <=", value, "recommondUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRecommondUserNameLessThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("recommond_user_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecommondUserNameLike(String value) {
            addCriterion("recommond_user_name like", value, "recommondUserName");
            return (Criteria) this;
        }

        public Criteria andRecommondUserNameNotLike(String value) {
            addCriterion("recommond_user_name not like", value, "recommondUserName");
            return (Criteria) this;
        }

        public Criteria andRecommondUserNameIn(List<String> values) {
            addCriterion("recommond_user_name in", values, "recommondUserName");
            return (Criteria) this;
        }

        public Criteria andRecommondUserNameNotIn(List<String> values) {
            addCriterion("recommond_user_name not in", values, "recommondUserName");
            return (Criteria) this;
        }

        public Criteria andRecommondUserNameBetween(String value1, String value2) {
            addCriterion("recommond_user_name between", value1, value2, "recommondUserName");
            return (Criteria) this;
        }

        public Criteria andRecommondUserNameNotBetween(String value1, String value2) {
            addCriterion("recommond_user_name not between", value1, value2, "recommondUserName");
            return (Criteria) this;
        }

        public Criteria andRemainWithdrawTimeIsNull() {
            addCriterion("remain_withdraw_time is null");
            return (Criteria) this;
        }

        public Criteria andRemainWithdrawTimeIsNotNull() {
            addCriterion("remain_withdraw_time is not null");
            return (Criteria) this;
        }

        public Criteria andRemainWithdrawTimeEqualTo(Integer value) {
            addCriterion("remain_withdraw_time =", value, "remainWithdrawTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRemainWithdrawTimeEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("remain_withdraw_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainWithdrawTimeNotEqualTo(Integer value) {
            addCriterion("remain_withdraw_time <>", value, "remainWithdrawTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRemainWithdrawTimeNotEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("remain_withdraw_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainWithdrawTimeGreaterThan(Integer value) {
            addCriterion("remain_withdraw_time >", value, "remainWithdrawTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRemainWithdrawTimeGreaterThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("remain_withdraw_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainWithdrawTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("remain_withdraw_time >=", value, "remainWithdrawTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRemainWithdrawTimeGreaterThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("remain_withdraw_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainWithdrawTimeLessThan(Integer value) {
            addCriterion("remain_withdraw_time <", value, "remainWithdrawTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRemainWithdrawTimeLessThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("remain_withdraw_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainWithdrawTimeLessThanOrEqualTo(Integer value) {
            addCriterion("remain_withdraw_time <=", value, "remainWithdrawTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRemainWithdrawTimeLessThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("remain_withdraw_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainWithdrawTimeIn(List<Integer> values) {
            addCriterion("remain_withdraw_time in", values, "remainWithdrawTime");
            return (Criteria) this;
        }

        public Criteria andRemainWithdrawTimeNotIn(List<Integer> values) {
            addCriterion("remain_withdraw_time not in", values, "remainWithdrawTime");
            return (Criteria) this;
        }

        public Criteria andRemainWithdrawTimeBetween(Integer value1, Integer value2) {
            addCriterion("remain_withdraw_time between", value1, value2, "remainWithdrawTime");
            return (Criteria) this;
        }

        public Criteria andRemainWithdrawTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("remain_withdraw_time not between", value1, value2, "remainWithdrawTime");
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyIsNull() {
            addCriterion("withdraw_money is null");
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyIsNotNull() {
            addCriterion("withdraw_money is not null");
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyEqualTo(Long value) {
            addCriterion("withdraw_money =", value, "withdrawMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andWithdrawMoneyEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("withdraw_money = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyNotEqualTo(Long value) {
            addCriterion("withdraw_money <>", value, "withdrawMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andWithdrawMoneyNotEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("withdraw_money <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyGreaterThan(Long value) {
            addCriterion("withdraw_money >", value, "withdrawMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andWithdrawMoneyGreaterThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("withdraw_money > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyGreaterThanOrEqualTo(Long value) {
            addCriterion("withdraw_money >=", value, "withdrawMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andWithdrawMoneyGreaterThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("withdraw_money >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyLessThan(Long value) {
            addCriterion("withdraw_money <", value, "withdrawMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andWithdrawMoneyLessThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("withdraw_money < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyLessThanOrEqualTo(Long value) {
            addCriterion("withdraw_money <=", value, "withdrawMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andWithdrawMoneyLessThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("withdraw_money <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyIn(List<Long> values) {
            addCriterion("withdraw_money in", values, "withdrawMoney");
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyNotIn(List<Long> values) {
            addCriterion("withdraw_money not in", values, "withdrawMoney");
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyBetween(Long value1, Long value2) {
            addCriterion("withdraw_money between", value1, value2, "withdrawMoney");
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyNotBetween(Long value1, Long value2) {
            addCriterion("withdraw_money not between", value1, value2, "withdrawMoney");
            return (Criteria) this;
        }

        public Criteria andExtendIsNull() {
            addCriterion("extend is null");
            return (Criteria) this;
        }

        public Criteria andExtendIsNotNull() {
            addCriterion("extend is not null");
            return (Criteria) this;
        }

        public Criteria andExtendEqualTo(String value) {
            addCriterion("extend =", value, "extend");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andExtendEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("extend = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExtendNotEqualTo(String value) {
            addCriterion("extend <>", value, "extend");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andExtendNotEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("extend <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExtendGreaterThan(String value) {
            addCriterion("extend >", value, "extend");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andExtendGreaterThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("extend > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExtendGreaterThanOrEqualTo(String value) {
            addCriterion("extend >=", value, "extend");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andExtendGreaterThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("extend >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExtendLessThan(String value) {
            addCriterion("extend <", value, "extend");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andExtendLessThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("extend < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExtendLessThanOrEqualTo(String value) {
            addCriterion("extend <=", value, "extend");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andExtendLessThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("extend <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExtendLike(String value) {
            addCriterion("extend like", value, "extend");
            return (Criteria) this;
        }

        public Criteria andExtendNotLike(String value) {
            addCriterion("extend not like", value, "extend");
            return (Criteria) this;
        }

        public Criteria andExtendIn(List<String> values) {
            addCriterion("extend in", values, "extend");
            return (Criteria) this;
        }

        public Criteria andExtendNotIn(List<String> values) {
            addCriterion("extend not in", values, "extend");
            return (Criteria) this;
        }

        public Criteria andExtendBetween(String value1, String value2) {
            addCriterion("extend between", value1, value2, "extend");
            return (Criteria) this;
        }

        public Criteria andExtendNotBetween(String value1, String value2) {
            addCriterion("extend not between", value1, value2, "extend");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andUserIdEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andUserIdNotEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andRemainMoneyIsNull() {
            addCriterion("remain_money is null");
            return (Criteria) this;
        }

        public Criteria andRemainMoneyIsNotNull() {
            addCriterion("remain_money is not null");
            return (Criteria) this;
        }

        public Criteria andRemainMoneyEqualTo(Long value) {
            addCriterion("remain_money =", value, "remainMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRemainMoneyEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("remain_money = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainMoneyNotEqualTo(Long value) {
            addCriterion("remain_money <>", value, "remainMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRemainMoneyNotEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("remain_money <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainMoneyGreaterThan(Long value) {
            addCriterion("remain_money >", value, "remainMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRemainMoneyGreaterThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("remain_money > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainMoneyGreaterThanOrEqualTo(Long value) {
            addCriterion("remain_money >=", value, "remainMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRemainMoneyGreaterThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("remain_money >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainMoneyLessThan(Long value) {
            addCriterion("remain_money <", value, "remainMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRemainMoneyLessThanColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("remain_money < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainMoneyLessThanOrEqualTo(Long value) {
            addCriterion("remain_money <=", value, "remainMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria andRemainMoneyLessThanOrEqualToColumn(UserExtend.Column column) {
            addCriterion(new StringBuilder("remain_money <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainMoneyIn(List<Long> values) {
            addCriterion("remain_money in", values, "remainMoney");
            return (Criteria) this;
        }

        public Criteria andRemainMoneyNotIn(List<Long> values) {
            addCriterion("remain_money not in", values, "remainMoney");
            return (Criteria) this;
        }

        public Criteria andRemainMoneyBetween(Long value1, Long value2) {
            addCriterion("remain_money between", value1, value2, "remainMoney");
            return (Criteria) this;
        }

        public Criteria andRemainMoneyNotBetween(Long value1, Long value2) {
            addCriterion("remain_money not between", value1, value2, "remainMoney");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_extend
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        private UserExtendExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        protected Criteria(UserExtendExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public UserExtendExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table user_extend
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_extend
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table user_extend
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.UserExtendExample example);
    }
}